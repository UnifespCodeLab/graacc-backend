services:
  # --- Banco de Dados ---
  graacc-db:
    image: postgres:13
    container_name: usuarios-db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: usuarios
    ports:
      - "5432:5432"
    volumes:
      - graacc-db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  # --- Microsservi√ßos Java ---
  usuarios-api:
    container_name: usuarios-api
    build:
      context: ./usuarios
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
      - DATABASE_URL=jdbc:postgresql://usuarios-db:5432/usuarios
      - DATABASE_USERNAME=user
      - DATABASE_PASSWORD=password
      - SECURITY_TOKEN=secret
      - SECURITY_EMISSOR=codelab
      - URL_API_GRAACC_AGENDAMENTOS=http://agendamentos-api:8080
    depends_on:
      - graacc-db

  agendamentos-api:
    container_name: agendamentos-api
    build:
      context: ./agendamentos
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - DATABASE_URL=jdbc:postgresql://usuarios-db:5432/usuarios
      - DATABASE_USERNAME=user
      - DATABASE_PASSWORD=password
      - SECURITY_TOKEN=secret
      - SECURITY_EMISSOR=codelab
    depends_on:
      - graacc-db

  notificacoes-api:
    container_name: notificacoes-api
    build:
      context: ./notificacoes
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    environment:
      - DATABASE_URL=jdbc:postgresql://usuarios-db:5432/usuarios
      - DATABASE_USERNAME=user
      - DATABASE_PASSWORD=password
      - SECURITY_TOKEN=secret
      - SECURITY_EMISSOR=codelab
    depends_on:
      - graacc-db

  orquestrador-api:
    container_name: orquestrador-api
    build:
      context: ./orquestrador
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - URL_MS_USUARIOS=http://usuarios-api:8080
      - URL_MS_AGENDAMENTOS=http://agendamentos-api:8080
      - URL_MS_NOTIFICACOES=http://notificacoes-api:8080
    depends_on:
      - usuarios-api
      - agendamentos-api
      - notificacoes-api

  cors-proxy:
    container_name: cors-proxy
    image: nginx
    ports:
      - "80:80"
    restart: on-failure
    volumes:
      - nginx:/etc/nginx/templates

volumes:
  nginx:
  graacc-db:
